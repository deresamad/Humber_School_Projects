--– Question 1 Create a list that displays the title of each book and the name and phone number of the person at the publisher’s
--office whom you would need to contact to reorder each book.

SELECT 
    books.title,
    publisher.contact,
    publisher.phone
FROM 
    books
JOIN 
    publisher ON books.pubid = publisher.pubid;
    
-- Question 2 Determine which orders have not yet been shipped and the name of the customer who placed the order. You are
--to sort the results by the date on which the order was placed.

SELECT 
    orders.order#,
    customers.lastname,
    customers.firstname,
    orders.orderdate
FROM 
    orders, customers
WHERE 
    orders.customer# = customers.customer#
    AND orders.shipdate IS NULL
ORDER BY 
    orders.orderdate;
    
-- Question 3 Produce a list of all customers who live in the state of Florida (FL) and have ordered a 
-- book about computers. Category is COMPUTERS. Display the customer's name, the book title, the order number and the category. 

SELECT 
    customers.firstname,
    customers.lastname,
    books.title,
    orders.order#,
    books.category
FROM 
    customers
JOIN 
    orders ON customers.customer# = orders.customer#
JOIN 
    orderitems ON orders.order# = orderitems.order#
JOIN 
    books ON orderitems.isbn = books.isbn
WHERE 
    customers.state = 'FL'
    AND books.category = 'COMPUTER';
    
--Question 4 Determine which books Jake Lucas has purchased. Perform the search using the customer's last and first names
--and not he customer number or an individual part of the customer’s name. If he has purchased multiple copies of
--the same book, unduplicate the results.

SELECT DISTINCT 
    books.title
FROM 
    customers
JOIN 
    orders ON customers.customer# = orders.customer#
JOIN 
    orderitems ON orders.order# = orderitems.order#
JOIN 
    books ON orderitems.isbn = books.isbn
WHERE 
    customers.firstname = 'Jake'
    AND customers.lastname = 'Lucas';
    
--Question 5 Determine the profit of each book sold to Jake Lucas, using the actual price the customer paid (not the book's
--regular retail price). Sort the results by the date of the order. If more than one book was ordered, sort the results
--by the profit amount in descending order. Perform the search by using the customer’s full name and not the customer number or part of his name.
SELECT 
    title,
    paideach - cost AS profit,
    orderdate
FROM 
    customers
JOIN 
    orders USING (customer#)
JOIN 
    orderitems USING (order#)
JOIN 
    books USING (isbn)
WHERE 
    firstname = 'JAKE'
    AND lastname = 'LUCAS'
ORDER BY 
    orderdate,
    profit DESC;

--Question 6 Which book was written by an author with the last name of Adams? Perform the search using the author’s last name
SELECT 
    title
FROM 
    books
NATURAL JOIN 
    bookauthor
NATURAL JOIN 
    author
WHERE 
    lname = 'ADAMS';
    
--Question 7 What gift will a customer who orders the book Shortest Poems receive? Use the actual book retail value to determine the gift.
SELECT 
    books.title,
    books.retail,
    gifts.gift
FROM 
    books
JOIN 
    gifts ON books.retail BETWEEN gifts.low_price AND gifts.high_price
WHERE 
    books.title = 'Shortest Poems';
    
    
--Questin 8 Identify the author(s) of the books ordered by Becca Nelson. Perform the search using the customer’s full name.
SELECT DISTINCT 
    fname,
    lname
FROM 
    customers
JOIN 
    orders USING (customer#)
JOIN 
    orderitems USING (order#)
JOIN 
    books USING (isbn)
JOIN 
    bookauthor USING (isbn)
JOIN 
    author USING (authorid)
WHERE 
    firstname = 'BECCA'
    AND lastname = 'NELSON';

--Question 9 Display a list of all books in the BOOKS table. If a book has been ordered by a customer, also list the
--corresponding order number and the state in which the customer resides. 

SELECT 
    title,
    order#,
    state
FROM 
    books
LEFT OUTER JOIN 
    orderitems USING (isbn)
LEFT OUTER JOIN 
    orders USING (order#)
LEFT OUTER JOIN 
    customers USING (customer#);
    
--Question 10 Determine how many books are in the Cooking Category
SELECT 
    COUNT(*) AS cooking_books
FROM 
    books
WHERE 
    category = 'COOKING';
--Question 11 Display the number of books that have a retail price of more than $30.00

SELECT 
    COUNT(*) AS books_above_30
FROM 
    books
WHERE 
    retail > 30;
   
--Question 12 Display the date of the most recently published book
SELECT 
    MAX(pubdate) AS latest_publication
FROM 
    books;

--Question 13 Determine the total profit generated by sales to customer 1017. Note the Quantity should 
--be reflected in the total profit calculation
SELECT 
    SUM((paid - books.cost) * quantity) AS total_profit
FROM 
    orderitems
JOIN 
    orders ON orderitems.order# = orders.order#
JOIN 
    books ON orderitems.isbn = books.isbn
WHERE 
    customer# = 1017;
    
--question 14 
SELECT 
    MIN(retail) AS cheapest_computer_book
FROM 
    books
WHERE 
    category = 'COMPUTER';
    
-- Question 15 Determine the average profit generated by orders contained in the Orders table. Note the total profit by order
--must be calculated before finding the average profit.
SELECT 
    AVG(order_profit) AS avg_order_profit
FROM (
    SELECT 
        orders.order#,
        SUM((paid - cost) * quantity) AS order_profit
    FROM 
        orders
    JOIN 
        orderitems ON orders.order# = orderitems.order#
    GROUP BY 
        orders.order#
) AS order_profits;


